type Account @entity {
  id: ID!
  balance: BigInt!
  domains: [Domain!]! @derivedFrom(field: "owner")
  bids: [Bid!]! @derivedFrom(field: "bidder")
  tokens: [Balance!]! @derivedFrom(field: "account")
  positions: [Position!]! @derivedFrom(field: "account")
}

type Domain @entity {
  id: ID!
  owner: Account!
  parent: Domain
  label: String!
  fqn: String!
  token: Token
  cid: String
  attrs: [Attribute!]! @derivedFrom(field: "domain")
  auction: Auction @derivedFrom(field: "domain")
  subdomains: [Domain!]! @derivedFrom(field: "parent")
}

type Meta @entity {
  id: ID!
}

type Attribute @entity {
  id: ID!
  key: Bytes!
  value: Bytes!
  domain: Domain!
}

type Token @entity {
  id: ID!
  domain: Domain!
  holders: [Balance!]! @derivedFrom(field: "token")
}

type Balance @entity {
  id: ID!
  account: Account!
  token: Token!
  amount: BigInt!
}

type Auction @entity {
  id: ID!
  created: BigInt!
  start: BigInt!
  end: BigInt!
  domain: Domain!
  sponsor: Account!
  tranches: [Tranche!]! @derivedFrom(field: "auction")
  checkpoint: BigInt!
}

type Tranche @entity {
  id: ID!
  auction: Auction!
  start: BigInt!
  end: BigInt!
  raised: BigInt!
  bids: [Bid!]! @derivedFrom(field: "tranche")
  positions: [Position!]! @derivedFrom(field: "tranche")
}

type Bid @entity {
  id: ID!
  placed: BigInt!
  amount: BigInt!
  bidder: Account!
  tranche: Tranche!
  position: Position!
}

type Position @entity {
  id: ID!
  amount: BigInt!
  account: Account!
  tranche: Tranche!
  bids: [Bid!]! @derivedFrom(field: "position")
}
